name: 'Load Direnv Environment and Mask Secrets'
description: "Load Direnv Environment and Mask Secrets conforming to commonly used secret formats"
author: 'Michael Bianco'

branding:
  icon: 'box'
  color: 'green'

# https://stackoverflow.com/questions/70558558/how-to-mask-environment-variables-created-in-github-when-running-a-workflow

inputs:
  mask_all:
    description: "Should all environment variables be masked by default"
    required: false
    default: 'true'
  environment_allowlist:
    description: "Comma-separated list of environment variables that should not be masked"
    required: false

runs:
  using: 'composite'
  steps:

    - name: "Check direnv installation"
      shell: bash
      run: |
        if command -v direnv &> /dev/null; then
          echo "direnv_exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "direnv_exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: "Install direnv"
      if: steps.check-direnv.outputs.direnv_exists == 'false'
      shell: bash
      run: curl -sfL https://direnv.net/install.sh | bash

    - name: "Check python installation"
      shell: bash
      run: |
        if command -v python3 &> /dev/null; then
          echo "python_exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "python_exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: "Install python"
      if: steps.check-python.outputs.python_exists == 'false'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: "Evaluate Direnv & Mask Secrets"
      shell: bash
      run: |
        direnv allow . && direnv export gha >> "$GITHUB_ENV"

        # you cannot source GITHUB_ENV, it uses a syntax which is *just* different enough from the shell that it fails
        direnv export json | python ${{ github.action_path }}/entrypoint.py --all=${{ inputs.mask_all }} --allow=${{ inputs.environment_allowlist }}
